apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  labels:
    app: telegraf
data:
  telegraf.conf: |
    # Agent settings
    [agent]
      interval = "2s" # How often to gather metrics
      flush_interval = "2s" # Time when data is written to InfluxDB
      debug = true # Debug
      quiet = false # Gives all information, not just errors
      hostname = "Rahti2" # Telegraf client name, otherwise will be random. May cause issue in flux query in Grafana if random

    # MQTT Consumer plugin
    [[inputs.mqtt_consumer]]
      servers = ["ssl://mosquitto-service:8883"]  # MQTT Broker URL. For better performance use Rahti2 MQTT Broker Service address, works as "localhost"
      topics = ["#"]  # Subscribe to all topics. 
      qos = 1 # Quality of Service Level. 0 = none, 1 = at least once, 2 = exactly once. This is between Telegraf and MQTT Broker!
      insecure_skip_verify = true # Certificates have not been signed, so insecure check must be true
      persistent_session = true # Keep session alive and do not disconnect
      client_id = "Rahti2" # Name for this MQTT Consumer for the broker, otherwise will be random
      tls_ca = "/etc/telegraf/certs/ca.crt"  # Path to CA certificate. Uses mosquitto-certs Secret, which is shared with the MQTT Broker in Rahti2
      tls_cert = "/etc/telegraf/certs/server.crt"  # Path to TLS certificate. Uses mosquitto-certs Secret, which is shared with the MQTT Broker in Rahti2
      tls_key = "/etc/telegraf/certs/server.key"  # Path to TLS key. Uses mosquitto-certs Secret, which is shared with the MQTT Broker in Rahti2
      client_trace = false # MQTT Consumer debug, should be false in normal use case
      data_format = "json_v2" # Define newest JSON V2 parser

      # Topic parsing for MQTT
      [[inputs.mqtt_consumer.topic_parsing]]
        topic = "toyota/+/+"  # Example topic format
        tags = "project/category/subject" # Parts of the topic to use as tags

      # JSON V2 parsing
      [[inputs.mqtt_consumer.json_v2]]
        measurement_name = "ConnectiCar" # Name of the measurement
        timestamp_path = "timestamp" # JSON field used in timestamp
        timestamp_format = "unix" # Time format, "unix" = 10 digits, "unix_ms" = 13 digits, "unix_us" = 16 digits, "unix_ns" = 19 digits

        # Fields from the JSON message
        [[inputs.mqtt_consumer.json_v2.field]]
          path = "data" # JSON path to the data value
          rename = "data" # Uses original data name, but this can be changed
          type = "dynamic" # Defines what kind of data type is, integer, float or string. Now uses dynamic which sets type automatically

        [[inputs.mqtt_consumer.json_v2.field]]
          path = "unit" # JSON path to the unit field
          type = "dynamic" # Defines what kind of data type is, integer, float or string. Now uses dynamic which sets type automatically

    # InfluxDB v2 Output plugin
    [[outputs.influxdb_v2]]
      urls = ["${INFLUX_URLS}"]  # Use environment variable for InfluxDB URL(s). Refers to Rahti2 Telegraf Deployment "INFLUX_URLS". For better performance use Rahti2 InfluxDB Service, "localhost"
      token = "${INFLUX_TOKEN}"  # Use environment variable for token. Refers to Rahti2 InfluxDB ConfigMap influxdb-setup-parameters "token".
      organization = "${INFLUX_ORG}"  # Use environment variable for organization. Refers to Rahti2 InfluxDB ConfigMap influxdb-setup-parameters "org"
      bucket = "${INFLUX_BUCKET}"  # Use environment variable for bucket. Refers to Rahti2 InfluxDB ConfigMap influxdb-setup-parameters "bucket"